<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aoshi.dao.AsActivityReceivedRecordMapper" >
  <resultMap id="BaseResultMap" type="com.aoshi.domain.AsActivityReceivedRecord" >
    <id column="activity_received_record_id" property="activityReceivedRecordId" jdbcType="INTEGER" />
    <result column="prize_id" property="prizeId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="staff_id" property="staffId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="BaseRowMap" type="com.aoshi.domain.AsResultMap">
  </resultMap>
  <sql id="Base_Column_List" >
    activity_received_record_id, prize_id, type, create_time, user_id, store_id, shop_id,staff_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from as_activity_received_record
    where activity_received_record_id = #{activityReceivedRecordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from as_activity_received_record
    where activity_received_record_id = #{activityReceivedRecordId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aoshi.domain.AsActivityReceivedRecord" >
    insert into as_activity_received_record (activity_received_record_id, prize_id, 
      type, create_time, user_id,store_id,shop_id,staff_id
      )
    values (#{activityReceivedRecordId,jdbcType=INTEGER}, #{prizeId,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER},
      #{storeId,jdbcType=INTEGER},#{shopId,jdbcType=INTEGER},#{staffId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.aoshi.domain.AsActivityReceivedRecord" >
    insert into as_activity_received_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="activityReceivedRecordId != null" >
        activity_received_record_id,
      </if>
      <if test="prizeId != null" >
        prize_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
       <if test="staffId != null" >
        staff_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="activityReceivedRecordId != null" >
        #{activityReceivedRecordId,jdbcType=INTEGER},
      </if>
      <if test="prizeId != null" >
        #{prizeId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
       <if test="staffId != null" >
        #{staffId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aoshi.domain.AsActivityReceivedRecord" >
    update as_activity_received_record
    <set >
      <if test="prizeId != null" >
        prize_id = #{prizeId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
       store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
        <if test="staffId != null" >
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
    </set>
    where activity_received_record_id = #{activityReceivedRecordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aoshi.domain.AsActivityReceivedRecord" >
    update as_activity_received_record
    set prize_id = #{prizeId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER},
      shop_id = #{shopId,jdbcType=INTEGER},
      staff_id = #{staffId,jdbcType=INTEGER},
    where activity_received_record_id = #{activityReceivedRecordId,jdbcType=INTEGER}
  </update>

    <select id="listAll" resultMap="BaseRowMap" >
        select
        prize.sn,prize.prize_name,prize.start_time,prize.end_time,prize.prize_id,user.account,record.create_time
        from as_activity_received_record record
        left join as_prize prize on record.prize_id = prize.prize_id
        left join as_user user on user.user_id=record.user_id
        where 1 = 1
        and record.type=1 and prize.status=0 and prize.activity_type=#{activityType}
        <if test="keyWord != null and keyWord != ''">
            and (
            prize.sn LIKE concat(concat('%',#{keyWord}),'%')
            or prize.prize_name LIKE concat(concat('%',#{keyWord}),'%')
            )
        </if>
        <if test="shopId != 'null' and shopId != ''">
            and	record.shop_id = #{shopId}
        </if>
        order by record.create_time desc
    </select>
    
   <select id="listAllExchage" resultMap="BaseRowMap">
  	select 
  	        prize.sn,prize.prize_name,prize.prize_id,user.account,record.create_time,user1.account as staffName
  			from as_activity_received_record record
		  	left join as_prize prize on record.prize_id = prize.prize_id 
		  	left join as_user user on user.user_id=record.user_id
		  	left join as_user user1 on user1.user_id=record.staff_id
	where 1 = 1
	and record.type=2 and prize.status=1 and prize.activity_type=#{activityType}
  	<if test="keyWord != null and keyWord != ''">
  		and (
		prize.sn LIKE concat(concat('%',#{keyWord}),'%')
		or prize.prize_name LIKE concat(concat('%',#{keyWord}),'%')
		)
  	</if>
    <if test="shopId != 'null' and shopId != ''">
            and	record.shop_id = #{shopId}
    </if>
  	order by record.create_time desc
  </select>
  <select id="findByAttr" parameterType="com.aoshi.domain.AsActivityReceivedRecord" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from as_activity_received_record
    <where>
    <if test="type != null">
      	and type = #{type}
    </if>
    <if test="prizeId != null">
    	and prize_id = #{prizeId}
    </if>
    <if test="userId != null">
    	and user_id = #{userId}
    </if>
    </where>
    limit 1
  </select>
</mapper>