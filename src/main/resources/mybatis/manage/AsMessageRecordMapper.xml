<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aoshi.dao.AsMessageRecordMapper" >
  <resultMap id="BaseResultMap" type="com.aoshi.domain.AsMessageRecord" >
    <id column="message_record_id" property="messageRecordId" jdbcType="INTEGER" />
    <result column="message_type" property="messageType" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="is_read" property="isRead" jdbcType="INTEGER" />
    <result column="is_del" property="isDel" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    
  </resultMap>
  <sql id="Base_Column_List" >
    message_record_id, message_type, user_id, order_id, is_read, is_del, create_time
  </sql>
  <sql id="Blob_Column_List" >
    message
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from as_message_record
    where message_record_id = #{messageRecordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from as_message_record
    where message_record_id = #{messageRecordId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aoshi.domain.AsMessageRecord" >
    insert into as_message_record (message_record_id, message_type, user_id, 
      order_id, is_read, is_del, 
      create_time, message)
    values (#{messageRecordId,jdbcType=INTEGER}, #{messageType,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{orderId,jdbcType=INTEGER}, #{isRead,jdbcType=INTEGER}, #{isDel,jdbcType=INTEGER}, 
      #{createTime,jdbcType=VARCHAR}, #{message,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.aoshi.domain.AsMessageRecord" >
    insert into as_message_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="messageRecordId != null" >
        message_record_id,
      </if>
      <if test="messageType != null" >
        message_type,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="isRead != null" >
        is_read,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="message != null" >
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="messageRecordId != null" >
        #{messageRecordId,jdbcType=INTEGER},
      </if>
      <if test="messageType != null" >
        #{messageType,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="isRead != null" >
        #{isRead,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aoshi.domain.AsMessageRecord" >
    update as_message_record
    <set >
      <if test="messageType != null" >
        message_type = #{messageType,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="isRead != null" >
        is_read = #{isRead,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where message_record_id = #{messageRecordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.aoshi.domain.AsMessageRecord" >
    update as_message_record
    set message_type = #{messageType,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      is_read = #{isRead,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      message = #{message,jdbcType=LONGVARCHAR}
    where message_record_id = #{messageRecordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aoshi.domain.AsMessageRecord" >
    update as_message_record
    set message_type = #{messageType,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      is_read = #{isRead,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR}
    where message_record_id = #{messageRecordId,jdbcType=INTEGER}
  </update>
  
  <select id="listByUserId" resultMap="BaseResultMap"  >
    SELECT
		msg.*, ord .order_sn
	FROM
		as_message_record as msg
	JOIN as_order as ord ON msg.order_id = ord .order_id
	WHERE
		msg.user_id = #{userId,jdbcType=INTEGER}
  </select>
</mapper>