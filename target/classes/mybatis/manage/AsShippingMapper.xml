<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aoshi.dao.AsShippingMapper" >
  <resultMap id="BaseResultMap" type="com.aoshi.domain.AsShipping" >
    <id column="shipping_id" property="shippingId" jdbcType="INTEGER" />
    <result column="shipping_code" property="shippingCode" jdbcType="VARCHAR" />
    <result column="shipping_name" property="shippingName" jdbcType="VARCHAR" />
    <result column="shipping_desc" property="shippingDesc" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    shipping_id, shipping_code, shipping_name, shipping_desc,enabled
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from as_shipping
    where shipping_id = #{shippingId,jdbcType=INTEGER}
  </select>
  <select id="listAll" resultMap="BaseResultMap" parameterType="pd">
    select  
    *
    from as_shipping
     where 1=1
    <if test="keyWords != null and keyWords != ''">
  		and shipping_name like concat(concat('%', #{keyWords}),'%')
  		or
      	shipping_code = #{keyWords}
  	</if>         
    order by shipping_id desc
  </select>
   <!-- 配送配置列表 分页 -->
  <select id="selectByAttr" resultMap="BaseResultMap" parameterType="pd" >
    select 
    <include refid="Base_Column_List" />
    from as_shipping
    <where>
      <if test="keyword != null and keyword != ''">
      	shipping_name like concat(concat('%', #{keyword}),'%') 
      	or
      	shipping_code = #{keyword,jdbcType=VARCHAR}
      </if>
    order by shipping_id desc 
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from as_shipping
    where shipping_id = #{shippingId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aoshi.domain.AsShipping" >
    insert into as_shipping (shipping_id, shipping_code, shipping_name, 
      shipping_desc, enabled
      )
    values (#{shippingId,jdbcType=INTEGER}, #{shippingCode,jdbcType=VARCHAR}, #{shippingName,jdbcType=VARCHAR}, 
      #{shippingDesc,jdbcType=VARCHAR},#{enabled,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.aoshi.domain.AsShipping" >
    insert into as_shipping
    <trim prefix="(" suffix=")" suffixOverrides="," >
      
      <if test="shippingCode != null" >
        shipping_code,
      </if>
      <if test="shippingName != null" >
        shipping_name,
      </if>
      <if test="shippingDesc != null" >
        shipping_desc,
      </if>
      
      <if test="enabled != null" >
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      
      <if test="shippingCode != null" >
        #{shippingCode,jdbcType=VARCHAR},
      </if>
      <if test="shippingName != null" >
        #{shippingName,jdbcType=VARCHAR},
      </if>
      <if test="shippingDesc != null" >
        #{shippingDesc,jdbcType=VARCHAR},
      </if>
      
      <if test="enabled != null" >
        #{enabled,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aoshi.domain.AsShipping" >
    update as_shipping
    <set >
      <if test="shippingCode != null" >
        shipping_code = #{shippingCode,jdbcType=VARCHAR},
      </if>
      <if test="shippingName != null" >
        shipping_name = #{shippingName,jdbcType=VARCHAR},
      </if>
      <if test="shippingDesc != null" >
        shipping_desc = #{shippingDesc,jdbcType=VARCHAR},
      </if>
   
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=INTEGER},
      </if>
    </set>
    where shipping_id = #{shippingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aoshi.domain.AsShipping" >
    update as_shipping
    set shipping_code = #{shippingCode,jdbcType=VARCHAR},
      shipping_name = #{shippingName,jdbcType=VARCHAR},
      shipping_desc = #{shippingDesc,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=INTEGER}
    where shipping_id = #{shippingId,jdbcType=INTEGER}
  </update>
  <delete id="deleteByPrimaryKeys">
    delete from as_shipping
    where shipping_id in
    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
     #{item}
    </foreach>
  </delete>
  
  <select id="selectAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from as_shipping where 1=1 
      <if test="keyword != null and keyWord != ''">
      	and (shipping_name like concat(concat('%', #{keyword}),'%') 
      	or
      	shipping_code = #{keyword,jdbcType=VARCHAR}) 
      </if>
    order by shipping_id desc
  </select>
  
  <!-- 查询可用的 -->
  <select id="selectAllForAvailable" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from as_shipping 
    where 
    enabled = 1 
    order by shipping_id desc
  </select>
</mapper>