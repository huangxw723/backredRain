<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aoshi.dao.AsGoodsTypeMapper" >
  <resultMap id="BaseResultMap" type="com.aoshi.domain.AsGoodsType" >
    <id column="goods_type_id" property="goodsTypeId" jdbcType="INTEGER" />
    <result column="type_name" property="typeName" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="id_path" property="idPath" jdbcType="VARCHAR" />
    <result column="type_img" property="typeImg" jdbcType="VARCHAR" />
    <result column="type_level" property="typeLevel" jdbcType="INTEGER" />
    <result column="sort_order" property="sortOrder" jdbcType="INTEGER" />
    <result column="is_show" property="isShow" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    goods_type_id, type_name, parent_id, id_path, type_img, type_level, sort_order, is_show
  </sql>
  <select id="selectByParent" resultMap="BaseResultMap" parameterType="pd" >
    select 
    <include refid="Base_Column_List" />
    from as_goods_type
    where parent_id = #{goodsTypeId,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from as_goods_type
    where goods_type_id = #{goodsTypeId,jdbcType=INTEGER} 
  </select>
   <select id="selectByPrimaryKeys" resultMap="BaseResultMap" parameterType="string" >
    select 
    <include refid="Base_Column_List" />
    from as_goods_type
    where goods_type_id in
  	  <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
        #{item}
      </foreach>
  </select>
   <select id="selectAll" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from as_goods_type
    order by sort_order desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from as_goods_type
    where goods_type_id = #{goodsTypeId,jdbcType=INTEGER} 
  </delete>
  <insert id="insert" parameterType="com.aoshi.domain.AsGoodsType" >
    insert into as_goods_type (goods_type_id, type_name, parent_id, 
      id_path, type_img, type_level, 
      sort_order, is_show)
    values (#{goodsTypeId,jdbcType=INTEGER}, #{typeName,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{idPath,jdbcType=VARCHAR}, #{typeImg,jdbcType=VARCHAR}, #{typeLevel,jdbcType=INTEGER}, 
      #{sortOrder,jdbcType=INTEGER}, #{isShow,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.aoshi.domain.AsGoodsType" >
    insert into as_goods_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsTypeId != null" >
        goods_type_id,
      </if>
      <if test="typeName != null" >
        type_name,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="idPath != null" >
        id_path,
      </if>
      <if test="typeImg != null" >
        type_img,
      </if>
      <if test="typeLevel != null" >
        type_level,
      </if>
      <if test="sortOrder != null" >
        sort_order,
      </if>
      <if test="isShow != null" >
        is_show,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsTypeId != null" >
        #{goodsTypeId,jdbcType=INTEGER},
      </if>
      <if test="typeName != null" >
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="idPath != null" >
        #{idPath,jdbcType=VARCHAR},
      </if>
      <if test="typeImg != null" >
        #{typeImg,jdbcType=VARCHAR},
      </if>
      <if test="typeLevel != null" >
        #{typeLevel,jdbcType=INTEGER},
      </if>
      <if test="sortOrder != null" >
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="isShow != null" >
        #{isShow,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aoshi.domain.AsGoodsType" >
    update as_goods_type
    <set >
      <if test="typeName != null" >
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="idPath != null" >
        id_path = #{idPath,jdbcType=VARCHAR},
      </if>
      <if test="typeImg != null" >
        type_img = #{typeImg,jdbcType=VARCHAR},
      </if>
      <if test="typeLevel != null" >
        type_level = #{typeLevel,jdbcType=INTEGER},
      </if>
      <if test="sortOrder != null" >
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="isShow != null" >
        is_show = #{isShow,jdbcType=INTEGER},
      </if>
    </set>
    where goods_type_id = #{goodsTypeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aoshi.domain.AsGoodsType" >
    update as_goods_type
    set type_name = #{typeName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      id_path = #{idPath,jdbcType=VARCHAR},
      type_img = #{typeImg,jdbcType=VARCHAR},
      type_level = #{typeLevel,jdbcType=INTEGER},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      is_show = #{isShow,jdbcType=INTEGER}
    where goods_type_id = #{goodsTypeId,jdbcType=INTEGER}
  </update>
  
  <select id="selectAlls" parameterType="com.aoshi.domain.AsGoodsType" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from as_goods_type where 1=1 
    <if test="typeName != null">
    	and type_name  like CONCAT(CONCAT('%',#{typeName}),'%') 
    </if>
  </select>
  
  <select id="getChildren" resultMap="BaseResultMap">
  	select goods_type_id, type_name, parent_id, id_path, type_level  from as_goods_type where parent_id = #{goodsTypeId}
  </select>
  
  <select id="selectByLevel" resultMap="BaseResultMap">
  	select goods_type_id, type_name, parent_id, id_path, type_level  from as_goods_type where type_level = #{typeLevel}
  </select>
  
  <select id="getgoodsTypeLevel" resultType="java.lang.Integer">
  	SELECT COUNT(*) FROM as_goods_type WHERE  type_level =2 AND goods_type_id = #{goodsTypeId}
  </select>
  
</mapper>