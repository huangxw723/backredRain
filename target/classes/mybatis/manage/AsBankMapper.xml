<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aoshi.dao.AsBankMapper" >
  <resultMap id="BaseResultMap" type="com.aoshi.domain.AsBank" >
    <id column="bank_id" property="bankId" jdbcType="INTEGER" />
    <result column="bank_code" property="bankCode" jdbcType="VARCHAR" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
  </resultMap>
  
   <resultMap extends="BaseResultMap" id="BaseRowMap" type="com.aoshi.domain.AsResultMap">
  </resultMap>
  
  
  <sql id="Base_Column_List" >
    bank_id, bank_code, bank_name, status, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from as_bank where bank_id = #{bankId,jdbcType=INTEGER}
  </select>
 
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from as_bank
    where bank_id = #{bankId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aoshi.domain.AsBank" >
    insert into as_bank (bank_id, bank_code, bank_name, 
      status, create_time)
    values (#{bankId,jdbcType=INTEGER}, #{bankCode,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.aoshi.domain.AsBank" >
    insert into as_bank
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bankId != null" >
        bank_id,
      </if>
      <if test="bankCode != null" >
        bank_code,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bankId != null" >
        #{bankId,jdbcType=INTEGER},
      </if>
      <if test="bankCode != null" >
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aoshi.domain.AsBank" >
    update as_bank
    <set >
      <if test="bankCode != null" >
        bank_code = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
    </set>
    where bank_id = #{bankId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aoshi.domain.AsBank" >
    update as_bank
    set bank_code = #{bankCode,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR}
    where bank_id = #{bankId,jdbcType=INTEGER}
  </update>
  
   <select id="selectAllBank" resultMap="BaseRowMap">
    select 
    <include refid="Base_Column_List" />
 
  from as_bank
  </select>
  
  <!--银行列表  -->
    <select id="bankInfoByPram" resultMap="BaseRowMap" parameterType="com.aoshi.domain.AsBank">
    	select 
    	*
	    from as_bank
	    where  1=1 
	  	 <if test="bankId != null and bankId !=''" >
		   and bank_id  LIKE concat(concat('%',#{bankId}),'%')
	    </if>
	     <if test="status != null and status != ''" >
	       and status = #{status}
	      </if>
	     <if test="bankCode != null and bankCode != ''" >
		   and bank_code LIKE concat(concat('%',#{bankCode}),'%') 
	   	</if>
	   	 <if test="bankName != null and bankName != ''" >
		   and bank_name LIKE concat(concat('%',#{bankName}),'%')
	   	</if>
  </select>
  
  <!--检查银行是否重名 重代码  -->
    <select id="selectByCodeOrName" resultMap="BaseRowMap" parameterType="java.lang.String">
   		 select 
    	<include refid="Base_Column_List" />
		    from as_bank
		    where 
		  	 1=1
	      <if test="bankCode != null and bankCode != ''" >
		   and bank_code = #{bankCode} 
	   	</if>
	   	 <if test="bankName != null and bankName != ''" >
		   and bank_name = #{bankName}
	   	</if>
  </select>
  
</mapper>