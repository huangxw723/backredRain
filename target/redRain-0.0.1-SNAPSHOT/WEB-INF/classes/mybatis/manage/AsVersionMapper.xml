<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aoshi.dao.AsVersionMapper" >
  <resultMap id="BaseResultMap" type="com.aoshi.domain.AsVersion" >
    <id column="version_id" property="versionId" jdbcType="INTEGER" />
    <result column="version_code" property="versionCode" jdbcType="VARCHAR" />
    <result column="platform" property="platform" jdbcType="INTEGER" />
    <result column="is_show" property="isShow" jdbcType="INTEGER" />
    <result column="download_url" property="downloadUrl" jdbcType="VARCHAR" />
    <result column="is_update" property="isUpdate" jdbcType="INTEGER" />
    <result column="app_type" property="appType" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.aoshi.domain.AsVersion" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    version_id, version_code, platform, is_show, download_url, is_update, app_type
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from as_version
    where version_id = #{versionId,jdbcType=INTEGER}
  </select>
  <select id="getVersionById" resultMap="ResultMapWithBLOBs" parameterType="pd" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from as_version
    where version_id = #{versionId,jdbcType=INTEGER}
  </select>
  <select id="listAll" resultMap="ResultMapWithBLOBs" parameterType="pd">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from as_version
     where 1=1
    <if test="keyWord != null and keyWord != ''">
  		and version_code like concat(concat('%', #{keyWord}),'%')
  	</if>   
    <if test="platform != null and platform != ''">
  		and platform = #{platform,jdbcType=INTEGER}
  	</if>        
    order by version_id asc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from as_version
    where version_id = #{versionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aoshi.domain.AsVersion" >
    insert into as_version (version_id, version_code, platform, 
      is_show, download_url, is_update, 
      app_type, remark)
    values (#{versionId,jdbcType=INTEGER}, #{versionCode,jdbcType=VARCHAR}, #{platform,jdbcType=INTEGER}, 
      #{isShow,jdbcType=INTEGER}, #{downloadUrl,jdbcType=VARCHAR}, #{isUpdate,jdbcType=INTEGER}, 
      #{appType,jdbcType=INTEGER}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.aoshi.domain.AsVersion" >
    insert into as_version
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="versionId != null" >
        version_id,
      </if>
      <if test="versionCode != null" >
        version_code,
      </if>
      <if test="platform != null" >
        platform,
      </if>
      <if test="isShow != null" >
        is_show,
      </if>
      <if test="downloadUrl != null" >
        download_url,
      </if>
      <if test="isUpdate != null" >
        is_update,
      </if>
      <if test="appType != null" >
        app_type,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="versionId != null" >
        #{versionId,jdbcType=INTEGER},
      </if>
      <if test="versionCode != null" >
        #{versionCode,jdbcType=VARCHAR},
      </if>
      <if test="platform != null" >
        #{platform,jdbcType=INTEGER},
      </if>
      <if test="isShow != null" >
        #{isShow,jdbcType=INTEGER},
      </if>
      <if test="downloadUrl != null" >
        #{downloadUrl,jdbcType=VARCHAR},
      </if>
      <if test="isUpdate != null" >
        #{isUpdate,jdbcType=INTEGER},
      </if>
      <if test="appType != null" >
        #{appType,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aoshi.domain.AsVersion" >
    update as_version
    <set >
      <if test="versionCode != null" >
        version_code = #{versionCode,jdbcType=VARCHAR},
      </if>
      <if test="platform != null" >
        platform = #{platform,jdbcType=INTEGER},
      </if>
      <if test="isShow != null" >
        is_show = #{isShow,jdbcType=INTEGER},
      </if>
      <if test="downloadUrl != null" >
        download_url = #{downloadUrl,jdbcType=VARCHAR},
      </if>
      <if test="isUpdate != null" >
        is_update = #{isUpdate,jdbcType=INTEGER},
      </if>
      <if test="appType != null" >
        app_type = #{appType,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where version_id = #{versionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.aoshi.domain.AsVersion" >
    update as_version
    set version_code = #{versionCode,jdbcType=VARCHAR},
      platform = #{platform,jdbcType=INTEGER},
      is_show = #{isShow,jdbcType=INTEGER},
      download_url = #{downloadUrl,jdbcType=VARCHAR},
      is_update = #{isUpdate,jdbcType=INTEGER},
      app_type = #{appType,jdbcType=INTEGER},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where version_id = #{versionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aoshi.domain.AsVersion" >
    update as_version
    set version_code = #{versionCode,jdbcType=VARCHAR},
      platform = #{platform,jdbcType=INTEGER},
      is_show = #{isShow,jdbcType=INTEGER},
      download_url = #{downloadUrl,jdbcType=VARCHAR},
      is_update = #{isUpdate,jdbcType=INTEGER},
      app_type = #{appType,jdbcType=INTEGER}
    where version_id = #{versionId,jdbcType=INTEGER}
  </update>
</mapper>