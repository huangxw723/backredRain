<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aoshi.dao.AsBankBindMapper" >
  <resultMap id="BaseResultMap" type="com.aoshi.domain.AsBankBind" >
    <id column="bank_bind_id" property="bankBindId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="bank_account" property="bankAccount" jdbcType="VARCHAR" />
    <result column="bank_cardholder" property="bankCardholder" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="card_type" property="cardType" jdbcType="VARCHAR" />
    <result column="card_length" property="cardLength" jdbcType="INTEGER" />
    <result column="card_prefixnum" property="cardPrefixnum" jdbcType="VARCHAR" />
    <result column="card_name" property="cardName" jdbcType="VARCHAR" />
    <result column="bank_num" property="bankNum" jdbcType="INTEGER" />
    <result column="identity_card" property="identityCard" jdbcType="VARCHAR" />
    <result column="bank_code" property="bankCode" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>

  <resultMap extends="BaseResultMap" id="BaseRowMap" type="com.aoshi.domain.AsResultMap">
  </resultMap>

  <sql id="Base_Column_List" >
    bank_bind_id, user_id, bank_name, bank_account, bank_cardholder, create_time, card_type, 
    card_length, card_prefixnum, card_name, bank_num, identity_card, bank_code, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from as_bank_bind
    where bank_bind_id = #{bankBindId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from as_bank_bind
    where bank_bind_id = #{bankBindId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aoshi.domain.AsBankBind" >
    insert into as_bank_bind (bank_bind_id, user_id, bank_name, 
      bank_account, bank_cardholder, create_time, 
      card_type, card_length, card_prefixnum, 
      card_name, bank_num, identity_card, 
      bank_code, status)
    values (#{bankBindId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{bankName,jdbcType=VARCHAR}, 
      #{bankAccount,jdbcType=VARCHAR}, #{bankCardholder,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{cardType,jdbcType=VARCHAR}, #{cardLength,jdbcType=INTEGER}, #{cardPrefixnum,jdbcType=VARCHAR}, 
      #{cardName,jdbcType=VARCHAR}, #{bankNum,jdbcType=INTEGER}, #{identityCard,jdbcType=VARCHAR}, 
      #{bankCode,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.aoshi.domain.AsBankBind" useGeneratedKeys="true" keyProperty="bankBindId">
    insert into as_bank_bind
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bankBindId != null" >
        bank_bind_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="bankAccount != null" >
        bank_account,
      </if>
      <if test="bankCardholder != null" >
        bank_cardholder,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="cardType != null" >
        card_type,
      </if>
      <if test="cardLength != null" >
        card_length,
      </if>
      <if test="cardPrefixnum != null" >
        card_prefixnum,
      </if>
      <if test="cardName != null" >
        card_name,
      </if>
      <if test="bankNum != null" >
        bank_num,
      </if>
      <if test="identityCard != null" >
        identity_card,
      </if>
      <if test="bankCode != null" >
        bank_code,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bankBindId != null" >
        #{bankBindId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankCardholder != null" >
        #{bankCardholder,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="cardType != null" >
        #{cardType,jdbcType=VARCHAR},
      </if>
      <if test="cardLength != null" >
        #{cardLength,jdbcType=INTEGER},
      </if>
      <if test="cardPrefixnum != null" >
        #{cardPrefixnum,jdbcType=VARCHAR},
      </if>
      <if test="cardName != null" >
        #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="bankNum != null" >
        #{bankNum,jdbcType=INTEGER},
      </if>
      <if test="identityCard != null" >
        #{identityCard,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null" >
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aoshi.domain.AsBankBind" >
    update as_bank_bind
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankCardholder != null" >
        bank_cardholder = #{bankCardholder,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="cardType != null" >
        card_type = #{cardType,jdbcType=VARCHAR},
      </if>
      <if test="cardLength != null" >
        card_length = #{cardLength,jdbcType=INTEGER},
      </if>
      <if test="cardPrefixnum != null" >
        card_prefixnum = #{cardPrefixnum,jdbcType=VARCHAR},
      </if>
      <if test="cardName != null" >
        card_name = #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="bankNum != null" >
        bank_num = #{bankNum,jdbcType=INTEGER},
      </if>
      <if test="identityCard != null" >
        identity_card = #{identityCard,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null" >
        bank_code = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where bank_bind_id = #{bankBindId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aoshi.domain.AsBankBind" >
    update as_bank_bind
    set user_id = #{userId,jdbcType=INTEGER},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      bank_cardholder = #{bankCardholder,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      card_type = #{cardType,jdbcType=VARCHAR},
      card_length = #{cardLength,jdbcType=INTEGER},
      card_prefixnum = #{cardPrefixnum,jdbcType=VARCHAR},
      card_name = #{cardName,jdbcType=VARCHAR},
      bank_num = #{bankNum,jdbcType=INTEGER},
      identity_card = #{identityCard,jdbcType=VARCHAR},
      bank_code = #{bankCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where bank_bind_id = #{bankBindId,jdbcType=INTEGER}
  </update>

  <select id="listAll" resultMap="BaseRowMap">
    select
    b.*,u.account account from as_bank_bind b
    left join as_user u on u.user_id = b.user_id
    where b.status = 0 and  b.user_id = #{userId}
    order by b.bank_bind_id desc
  </select>

  <select id="selectAllByUserId" resultMap="BaseResultMap">
    select
    b.* from as_bank_bind b
    where b.status = 0 and  b.user_id = #{userId} order by b.bank_bind_id desc
  </select>

  <select id="isBankBind" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM as_bank_bind WHERE user_id = #{userId} AND status = 0
  </select>

</mapper>