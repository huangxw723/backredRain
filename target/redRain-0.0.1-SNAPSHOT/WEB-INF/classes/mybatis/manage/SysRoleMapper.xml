<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aoshi.dao.SysRoleMapper" >
  <resultMap id="BaseResultMap" type="com.aoshi.domain.SysRole" >
    <id column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
    <result column="RIGHTS" property="rights" jdbcType="VARCHAR" />
    <result column="PARENT_ID" property="parentId" jdbcType="VARCHAR" />
    <result column="ADD_QX" property="addQx" jdbcType="VARCHAR" />
    <result column="DEL_QX" property="delQx" jdbcType="VARCHAR" />
    <result column="EDIT_QX" property="editQx" jdbcType="VARCHAR" />
    <result column="CHA_QX" property="chaQx" jdbcType="VARCHAR" />
    <result column="QX_ID" property="qxId" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="isAdmin" property="isadmin" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    ROLE_ID, ROLE_NAME, RIGHTS, PARENT_ID, ADD_QX, DEL_QX, EDIT_QX, CHA_QX, QX_ID, create_by, 
    isAdmin
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_role
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.aoshi.domain.SysRole" >
    insert into sys_role (ROLE_ID, ROLE_NAME, RIGHTS, 
      PARENT_ID, ADD_QX, DEL_QX, 
      EDIT_QX, CHA_QX, QX_ID, 
      create_by, isAdmin)
    values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{rights,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=VARCHAR}, #{addQx,jdbcType=VARCHAR}, #{delQx,jdbcType=VARCHAR}, 
      #{editQx,jdbcType=VARCHAR}, #{chaQx,jdbcType=VARCHAR}, #{qxId,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{isadmin,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.aoshi.domain.SysRole" >
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        ROLE_ID,
      </if>
      <if test="roleName != null" >
        ROLE_NAME,
      </if>
      <if test="rights != null" >
        RIGHTS,
      </if>
      <if test="parentId != null" >
        PARENT_ID,
      </if>
      <if test="addQx != null" >
        ADD_QX,
      </if>
      <if test="delQx != null" >
        DEL_QX,
      </if>
      <if test="editQx != null" >
        EDIT_QX,
      </if>
      <if test="chaQx != null" >
        CHA_QX,
      </if>
      <if test="qxId != null" >
        QX_ID,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="isadmin != null" >
        isAdmin,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="rights != null" >
        #{rights,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="addQx != null" >
        #{addQx,jdbcType=VARCHAR},
      </if>
      <if test="delQx != null" >
        #{delQx,jdbcType=VARCHAR},
      </if>
      <if test="editQx != null" >
        #{editQx,jdbcType=VARCHAR},
      </if>
      <if test="chaQx != null" >
        #{chaQx,jdbcType=VARCHAR},
      </if>
      <if test="qxId != null" >
        #{qxId,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="isadmin != null" >
        #{isadmin,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aoshi.domain.SysRole" >
    update sys_role
    <set >
      <if test="roleName != null" >
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="rights != null" >
        RIGHTS = #{rights,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        PARENT_ID = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="addQx != null" >
        ADD_QX = #{addQx,jdbcType=VARCHAR},
      </if>
      <if test="delQx != null" >
        DEL_QX = #{delQx,jdbcType=VARCHAR},
      </if>
      <if test="editQx != null" >
        EDIT_QX = #{editQx,jdbcType=VARCHAR},
      </if>
      <if test="chaQx != null" >
        CHA_QX = #{chaQx,jdbcType=VARCHAR},
      </if>
      <if test="qxId != null" >
        QX_ID = #{qxId,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="isadmin != null" >
        isAdmin = #{isadmin,jdbcType=BIT},
      </if>
    </set>
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aoshi.domain.SysRole" >
    update sys_role
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      RIGHTS = #{rights,jdbcType=VARCHAR},
      PARENT_ID = #{parentId,jdbcType=VARCHAR},
      ADD_QX = #{addQx,jdbcType=VARCHAR},
      DEL_QX = #{delQx,jdbcType=VARCHAR},
      EDIT_QX = #{editQx,jdbcType=VARCHAR},
      CHA_QX = #{chaQx,jdbcType=VARCHAR},
      QX_ID = #{qxId,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      isAdmin = #{isadmin,jdbcType=BIT}
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>

    <!--判断权限ID是否存在-->
    <select id="isExistById" resultType="java.lang.Integer">
        select count(*) from sys_role where role_id = #{roleId}
    </select>
    
    <select id="getRoleAll" resultMap="BaseResultMap">
    select * from SYS_ROLE where ROLE_NAME not in('澳视商户管理员','商家管理组','员工管理员','系统管理员','运营管理员')   
    </select>
    
    
    <select id="seletByRoleIds" resultMap="BaseResultMap">
    	select * from sys_role where role_id in 
    	<foreach collection="list" item="roleId" open="(" separator="," close=")">
    		#{roleId}
    	</foreach>
    
    </select>
</mapper>